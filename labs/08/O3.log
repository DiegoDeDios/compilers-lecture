
./proc-O3:     file format elf64-x86-64


Disassembly of section .init:

0000000000000548 <_init>:
 548:	48 83 ec 08          	sub    $0x8,%rsp
 54c:	48 8b 05 95 0a 20 00 	mov    0x200a95(%rip),%rax        # 200fe8 <__gmon_start__>
 553:	48 85 c0             	test   %rax,%rax
 556:	74 02                	je     55a <_init+0x12>
 558:	ff d0                	callq  *%rax
 55a:	48 83 c4 08          	add    $0x8,%rsp
 55e:	c3                   	retq   

Disassembly of section .plt:

0000000000000560 <.plt>:
 560:	ff 35 52 0a 20 00    	pushq  0x200a52(%rip)        # 200fb8 <_GLOBAL_OFFSET_TABLE_+0x8>
 566:	ff 25 54 0a 20 00    	jmpq   *0x200a54(%rip)        # 200fc0 <_GLOBAL_OFFSET_TABLE_+0x10>
 56c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000570 <malloc@plt>:
 570:	ff 25 52 0a 20 00    	jmpq   *0x200a52(%rip)        # 200fc8 <malloc@GLIBC_2.2.5>
 576:	68 00 00 00 00       	pushq  $0x0
 57b:	e9 e0 ff ff ff       	jmpq   560 <.plt>

0000000000000580 <__printf_chk@plt>:
 580:	ff 25 4a 0a 20 00    	jmpq   *0x200a4a(%rip)        # 200fd0 <__printf_chk@GLIBC_2.3.4>
 586:	68 01 00 00 00       	pushq  $0x1
 58b:	e9 d0 ff ff ff       	jmpq   560 <.plt>

Disassembly of section .plt.got:

0000000000000590 <__cxa_finalize@plt>:
 590:	ff 25 62 0a 20 00    	jmpq   *0x200a62(%rip)        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 596:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000000000005a0 <main>:
 5a0:	48 83 ec 08          	sub    $0x8,%rsp
 5a4:	bf 00 09 3d 00       	mov    $0x3d0900,%edi
 5a9:	e8 c2 ff ff ff       	callq  570 <malloc@plt>
 5ae:	48 89 c2             	mov    %rax,%rdx
 5b1:	48 c1 ea 02          	shr    $0x2,%rdx
 5b5:	48 f7 da             	neg    %rdx
 5b8:	83 e2 03             	and    $0x3,%edx
 5bb:	0f 84 d9 00 00 00    	je     69a <main+0xfa>
 5c1:	83 fa 01             	cmp    $0x1,%edx
 5c4:	44 8b 10             	mov    (%rax),%r10d
 5c7:	0f 84 bd 00 00 00    	je     68a <main+0xea>
 5cd:	44 03 50 04          	add    0x4(%rax),%r10d
 5d1:	83 fa 03             	cmp    $0x3,%edx
 5d4:	0f 85 d0 00 00 00    	jne    6aa <main+0x10a>
 5da:	44 03 50 08          	add    0x8(%rax),%r10d
 5de:	41 b9 3d 42 0f 00    	mov    $0xf423d,%r9d
 5e4:	bf 03 00 00 00       	mov    $0x3,%edi
 5e9:	41 b8 40 42 0f 00    	mov    $0xf4240,%r8d
 5ef:	66 0f ef c0          	pxor   %xmm0,%xmm0
 5f3:	41 29 d0             	sub    %edx,%r8d
 5f6:	89 d2                	mov    %edx,%edx
 5f8:	44 89 c6             	mov    %r8d,%esi
 5fb:	48 8d 0c 90          	lea    (%rax,%rdx,4),%rcx
 5ff:	31 d2                	xor    %edx,%edx
 601:	c1 ee 02             	shr    $0x2,%esi
 604:	0f 1f 40 00          	nopl   0x0(%rax)
 608:	83 c2 01             	add    $0x1,%edx
 60b:	66 0f fe 01          	paddd  (%rcx),%xmm0
 60f:	48 83 c1 10          	add    $0x10,%rcx
 613:	39 d6                	cmp    %edx,%esi
 615:	77 f1                	ja     608 <main+0x68>
 617:	66 0f 6f c8          	movdqa %xmm0,%xmm1
 61b:	44 89 ce             	mov    %r9d,%esi
 61e:	66 0f 73 d9 08       	psrldq $0x8,%xmm1
 623:	66 0f fe c1          	paddd  %xmm1,%xmm0
 627:	66 0f 6f c8          	movdqa %xmm0,%xmm1
 62b:	66 0f 73 d9 04       	psrldq $0x4,%xmm1
 630:	66 0f fe c1          	paddd  %xmm1,%xmm0
 634:	66 0f 7e c2          	movd   %xmm0,%edx
 638:	44 01 d2             	add    %r10d,%edx
 63b:	45 89 c2             	mov    %r8d,%r10d
 63e:	41 83 e2 fc          	and    $0xfffffffc,%r10d
 642:	44 29 d6             	sub    %r10d,%esi
 645:	45 39 d0             	cmp    %r10d,%r8d
 648:	41 8d 0c 3a          	lea    (%r10,%rdi,1),%ecx
 64c:	74 22                	je     670 <main+0xd0>
 64e:	48 63 f9             	movslq %ecx,%rdi
 651:	03 14 b8             	add    (%rax,%rdi,4),%edx
 654:	83 fe 01             	cmp    $0x1,%esi
 657:	8d 79 01             	lea    0x1(%rcx),%edi
 65a:	74 14                	je     670 <main+0xd0>
 65c:	48 63 ff             	movslq %edi,%rdi
 65f:	83 c1 02             	add    $0x2,%ecx
 662:	03 14 b8             	add    (%rax,%rdi,4),%edx
 665:	83 fe 02             	cmp    $0x2,%esi
 668:	74 06                	je     670 <main+0xd0>
 66a:	48 63 c9             	movslq %ecx,%rcx
 66d:	03 14 88             	add    (%rax,%rcx,4),%edx
 670:	48 8d 35 dd 02 00 00 	lea    0x2dd(%rip),%rsi        # 954 <_IO_stdin_used+0x4>
 677:	bf 01 00 00 00       	mov    $0x1,%edi
 67c:	31 c0                	xor    %eax,%eax
 67e:	e8 fd fe ff ff       	callq  580 <__printf_chk@plt>
 683:	31 c0                	xor    %eax,%eax
 685:	48 83 c4 08          	add    $0x8,%rsp
 689:	c3                   	retq   
 68a:	41 b9 3f 42 0f 00    	mov    $0xf423f,%r9d
 690:	bf 01 00 00 00       	mov    $0x1,%edi
 695:	e9 4f ff ff ff       	jmpq   5e9 <main+0x49>
 69a:	41 b9 40 42 0f 00    	mov    $0xf4240,%r9d
 6a0:	45 31 d2             	xor    %r10d,%r10d
 6a3:	31 ff                	xor    %edi,%edi
 6a5:	e9 3f ff ff ff       	jmpq   5e9 <main+0x49>
 6aa:	41 b9 3e 42 0f 00    	mov    $0xf423e,%r9d
 6b0:	bf 02 00 00 00       	mov    $0x2,%edi
 6b5:	e9 2f ff ff ff       	jmpq   5e9 <main+0x49>
 6ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000006c0 <_start>:
 6c0:	31 ed                	xor    %ebp,%ebp
 6c2:	49 89 d1             	mov    %rdx,%r9
 6c5:	5e                   	pop    %rsi
 6c6:	48 89 e2             	mov    %rsp,%rdx
 6c9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
 6cd:	50                   	push   %rax
 6ce:	54                   	push   %rsp
 6cf:	4c 8d 05 6a 02 00 00 	lea    0x26a(%rip),%r8        # 940 <__libc_csu_fini>
 6d6:	48 8d 0d f3 01 00 00 	lea    0x1f3(%rip),%rcx        # 8d0 <__libc_csu_init>
 6dd:	48 8d 3d bc fe ff ff 	lea    -0x144(%rip),%rdi        # 5a0 <main>
 6e4:	ff 15 f6 08 20 00    	callq  *0x2008f6(%rip)        # 200fe0 <__libc_start_main@GLIBC_2.2.5>
 6ea:	f4                   	hlt    
 6eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000006f0 <deregister_tm_clones>:
 6f0:	48 8d 3d 19 09 20 00 	lea    0x200919(%rip),%rdi        # 201010 <__TMC_END__>
 6f7:	55                   	push   %rbp
 6f8:	48 8d 05 11 09 20 00 	lea    0x200911(%rip),%rax        # 201010 <__TMC_END__>
 6ff:	48 39 f8             	cmp    %rdi,%rax
 702:	48 89 e5             	mov    %rsp,%rbp
 705:	74 19                	je     720 <deregister_tm_clones+0x30>
 707:	48 8b 05 ca 08 20 00 	mov    0x2008ca(%rip),%rax        # 200fd8 <_ITM_deregisterTMCloneTable>
 70e:	48 85 c0             	test   %rax,%rax
 711:	74 0d                	je     720 <deregister_tm_clones+0x30>
 713:	5d                   	pop    %rbp
 714:	ff e0                	jmpq   *%rax
 716:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 71d:	00 00 00 
 720:	5d                   	pop    %rbp
 721:	c3                   	retq   
 722:	0f 1f 40 00          	nopl   0x0(%rax)
 726:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 72d:	00 00 00 

0000000000000730 <register_tm_clones>:
 730:	48 8d 3d d9 08 20 00 	lea    0x2008d9(%rip),%rdi        # 201010 <__TMC_END__>
 737:	48 8d 35 d2 08 20 00 	lea    0x2008d2(%rip),%rsi        # 201010 <__TMC_END__>
 73e:	55                   	push   %rbp
 73f:	48 29 fe             	sub    %rdi,%rsi
 742:	48 89 e5             	mov    %rsp,%rbp
 745:	48 c1 fe 03          	sar    $0x3,%rsi
 749:	48 89 f0             	mov    %rsi,%rax
 74c:	48 c1 e8 3f          	shr    $0x3f,%rax
 750:	48 01 c6             	add    %rax,%rsi
 753:	48 d1 fe             	sar    %rsi
 756:	74 18                	je     770 <register_tm_clones+0x40>
 758:	48 8b 05 91 08 20 00 	mov    0x200891(%rip),%rax        # 200ff0 <_ITM_registerTMCloneTable>
 75f:	48 85 c0             	test   %rax,%rax
 762:	74 0c                	je     770 <register_tm_clones+0x40>
 764:	5d                   	pop    %rbp
 765:	ff e0                	jmpq   *%rax
 767:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 76e:	00 00 
 770:	5d                   	pop    %rbp
 771:	c3                   	retq   
 772:	0f 1f 40 00          	nopl   0x0(%rax)
 776:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 77d:	00 00 00 

0000000000000780 <__do_global_dtors_aux>:
 780:	80 3d 89 08 20 00 00 	cmpb   $0x0,0x200889(%rip)        # 201010 <__TMC_END__>
 787:	75 2f                	jne    7b8 <__do_global_dtors_aux+0x38>
 789:	48 83 3d 67 08 20 00 	cmpq   $0x0,0x200867(%rip)        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 790:	00 
 791:	55                   	push   %rbp
 792:	48 89 e5             	mov    %rsp,%rbp
 795:	74 0c                	je     7a3 <__do_global_dtors_aux+0x23>
 797:	48 8b 3d 6a 08 20 00 	mov    0x20086a(%rip),%rdi        # 201008 <__dso_handle>
 79e:	e8 ed fd ff ff       	callq  590 <__cxa_finalize@plt>
 7a3:	e8 48 ff ff ff       	callq  6f0 <deregister_tm_clones>
 7a8:	c6 05 61 08 20 00 01 	movb   $0x1,0x200861(%rip)        # 201010 <__TMC_END__>
 7af:	5d                   	pop    %rbp
 7b0:	c3                   	retq   
 7b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 7b8:	f3 c3                	repz retq 
 7ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000007c0 <frame_dummy>:
 7c0:	55                   	push   %rbp
 7c1:	48 89 e5             	mov    %rsp,%rbp
 7c4:	5d                   	pop    %rbp
 7c5:	e9 66 ff ff ff       	jmpq   730 <register_tm_clones>
 7ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000007d0 <proc>:
 7d0:	48 89 f8             	mov    %rdi,%rax
 7d3:	48 c1 e8 02          	shr    $0x2,%rax
 7d7:	48 f7 d8             	neg    %rax
 7da:	83 e0 03             	and    $0x3,%eax
 7dd:	0f 84 c7 00 00 00    	je     8aa <proc+0xda>
 7e3:	83 f8 01             	cmp    $0x1,%eax
 7e6:	44 8b 17             	mov    (%rdi),%r10d
 7e9:	0f 84 ab 00 00 00    	je     89a <proc+0xca>
 7ef:	44 03 57 04          	add    0x4(%rdi),%r10d
 7f3:	83 f8 03             	cmp    $0x3,%eax
 7f6:	0f 85 be 00 00 00    	jne    8ba <proc+0xea>
 7fc:	44 03 57 08          	add    0x8(%rdi),%r10d
 800:	41 b9 3d 42 0f 00    	mov    $0xf423d,%r9d
 806:	be 03 00 00 00       	mov    $0x3,%esi
 80b:	41 b8 40 42 0f 00    	mov    $0xf4240,%r8d
 811:	66 0f ef c0          	pxor   %xmm0,%xmm0
 815:	41 29 c0             	sub    %eax,%r8d
 818:	89 c0                	mov    %eax,%eax
 81a:	44 89 c1             	mov    %r8d,%ecx
 81d:	48 8d 14 87          	lea    (%rdi,%rax,4),%rdx
 821:	31 c0                	xor    %eax,%eax
 823:	c1 e9 02             	shr    $0x2,%ecx
 826:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 82d:	00 00 00 
 830:	83 c0 01             	add    $0x1,%eax
 833:	66 0f fe 02          	paddd  (%rdx),%xmm0
 837:	48 83 c2 10          	add    $0x10,%rdx
 83b:	39 c1                	cmp    %eax,%ecx
 83d:	77 f1                	ja     830 <proc+0x60>
 83f:	66 0f 6f c8          	movdqa %xmm0,%xmm1
 843:	44 89 c9             	mov    %r9d,%ecx
 846:	66 0f 73 d9 08       	psrldq $0x8,%xmm1
 84b:	66 0f fe c1          	paddd  %xmm1,%xmm0
 84f:	66 0f 6f c8          	movdqa %xmm0,%xmm1
 853:	66 0f 73 d9 04       	psrldq $0x4,%xmm1
 858:	66 0f fe c1          	paddd  %xmm1,%xmm0
 85c:	66 0f 7e c0          	movd   %xmm0,%eax
 860:	44 01 d0             	add    %r10d,%eax
 863:	45 89 c2             	mov    %r8d,%r10d
 866:	41 83 e2 fc          	and    $0xfffffffc,%r10d
 86a:	44 29 d1             	sub    %r10d,%ecx
 86d:	45 39 d0             	cmp    %r10d,%r8d
 870:	41 8d 14 32          	lea    (%r10,%rsi,1),%edx
 874:	74 22                	je     898 <proc+0xc8>
 876:	48 63 f2             	movslq %edx,%rsi
 879:	03 04 b7             	add    (%rdi,%rsi,4),%eax
 87c:	83 f9 01             	cmp    $0x1,%ecx
 87f:	8d 72 01             	lea    0x1(%rdx),%esi
 882:	74 14                	je     898 <proc+0xc8>
 884:	48 63 f6             	movslq %esi,%rsi
 887:	83 c2 02             	add    $0x2,%edx
 88a:	03 04 b7             	add    (%rdi,%rsi,4),%eax
 88d:	83 f9 02             	cmp    $0x2,%ecx
 890:	74 06                	je     898 <proc+0xc8>
 892:	48 63 d2             	movslq %edx,%rdx
 895:	03 04 97             	add    (%rdi,%rdx,4),%eax
 898:	f3 c3                	repz retq 
 89a:	41 b9 3f 42 0f 00    	mov    $0xf423f,%r9d
 8a0:	be 01 00 00 00       	mov    $0x1,%esi
 8a5:	e9 61 ff ff ff       	jmpq   80b <proc+0x3b>
 8aa:	41 b9 40 42 0f 00    	mov    $0xf4240,%r9d
 8b0:	31 f6                	xor    %esi,%esi
 8b2:	45 31 d2             	xor    %r10d,%r10d
 8b5:	e9 51 ff ff ff       	jmpq   80b <proc+0x3b>
 8ba:	41 b9 3e 42 0f 00    	mov    $0xf423e,%r9d
 8c0:	be 02 00 00 00       	mov    $0x2,%esi
 8c5:	e9 41 ff ff ff       	jmpq   80b <proc+0x3b>
 8ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000008d0 <__libc_csu_init>:
 8d0:	41 57                	push   %r15
 8d2:	41 56                	push   %r14
 8d4:	49 89 d7             	mov    %rdx,%r15
 8d7:	41 55                	push   %r13
 8d9:	41 54                	push   %r12
 8db:	4c 8d 25 ce 04 20 00 	lea    0x2004ce(%rip),%r12        # 200db0 <__frame_dummy_init_array_entry>
 8e2:	55                   	push   %rbp
 8e3:	48 8d 2d ce 04 20 00 	lea    0x2004ce(%rip),%rbp        # 200db8 <__init_array_end>
 8ea:	53                   	push   %rbx
 8eb:	41 89 fd             	mov    %edi,%r13d
 8ee:	49 89 f6             	mov    %rsi,%r14
 8f1:	4c 29 e5             	sub    %r12,%rbp
 8f4:	48 83 ec 08          	sub    $0x8,%rsp
 8f8:	48 c1 fd 03          	sar    $0x3,%rbp
 8fc:	e8 47 fc ff ff       	callq  548 <_init>
 901:	48 85 ed             	test   %rbp,%rbp
 904:	74 20                	je     926 <__libc_csu_init+0x56>
 906:	31 db                	xor    %ebx,%ebx
 908:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
 90f:	00 
 910:	4c 89 fa             	mov    %r15,%rdx
 913:	4c 89 f6             	mov    %r14,%rsi
 916:	44 89 ef             	mov    %r13d,%edi
 919:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
 91d:	48 83 c3 01          	add    $0x1,%rbx
 921:	48 39 dd             	cmp    %rbx,%rbp
 924:	75 ea                	jne    910 <__libc_csu_init+0x40>
 926:	48 83 c4 08          	add    $0x8,%rsp
 92a:	5b                   	pop    %rbx
 92b:	5d                   	pop    %rbp
 92c:	41 5c                	pop    %r12
 92e:	41 5d                	pop    %r13
 930:	41 5e                	pop    %r14
 932:	41 5f                	pop    %r15
 934:	c3                   	retq   
 935:	90                   	nop
 936:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 93d:	00 00 00 

0000000000000940 <__libc_csu_fini>:
 940:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000000944 <_fini>:
 944:	48 83 ec 08          	sub    $0x8,%rsp
 948:	48 83 c4 08          	add    $0x8,%rsp
 94c:	c3                   	retq   
